#include "main.h"

#include "ROBOT.h"


//LCD Pins and ports
LCD_PortType LCD_Ports[] = {
	D4_Port, D5_Port, D6_Port, D7_Port
};

LCD_PinType LCD_Pins[] = {
	D4_Pin, D5_Pin, D6_Pin, D7_Pin
};

//Joystick conf and handle
JOYSTICK_CHANNEL_CONF Joystick_ChannelConf;
JOYSTICK_ADC_HANDLER Joystick_ADC_Handler;

//Servo handles
SERVO_HANDLE ServoBase_Handle;
SERVO_HANDLE ServoJoint_Handle;
SERVO_HANDLE ServoClaw_Handle;


//Global variables
__IO Robot_Mode_t mode = MANUAL;

__IO uint32_t button_state = 0;

int16_t xy_joystick[2];
char row1[17];
char data[17];


int main(void)
{
  //System initialization
  HAL_Init();
  SysConfigClock();
  Global_GPIO_Init();

  //Peripherals initialization
  USART_Init(115200);

  Mode_Change_Interrupt_Init();

  LCD_Struct_t LCD_1602 = LCD_Create(LCD_Ports, LCD_Pins, RS_Port, RS_Pin, E_Port, E_Pin);

  Joystick_Struct_t Joystick = Joystick_Create(
		  JOYSTICK_X_Port, JOYSTICK_X_Pin, JOYSTICK_X_ADC_Channel,
		  JOYSTICK_Y_Port, JOYSTICK_Y_Pin, JOYSTICK_Y_ADC_Channel,
		  JOYSTICK_BUTTON_Port, JOYSTICK_BUTTON_Pin,
		  &Joystick_ChannelConf, &Joystick_ADC_Handler);

  SG90_Struct_t ServoBase = Servo_Create(
		  SERVO_BASE_Port, SERVO_BASE_Pin, SERVO_BASE_TIM_INSTANCE,
		  SERVO_BASE_PWM_CHANNEL, &ServoBase_Handle);

  SG90_Struct_t ServoJoint = Servo_Create(
		  SERVO_JOINT_Port, SERVO_JOINT_Pin, SERVO_JOINT_TIM_INSTANCE,
		  SERVO_JOINT_PWM_CHANNEL, &ServoJoint_Handle);

  SG90_Struct_t ServoClaw = Servo_Create(
		  SERVO_CLAW_Port, SERVO_CLAW_Pin, SERVO_CLAW_TIM_INSTANCE,
		  SERVO_CLAW_PWM_CHANNEL, &ServoClaw_Handle);

  SG90_Struct_t* Robot[3] = {&ServoBase, &ServoJoint, &ServoClaw};

  //Program loop
  while (1)
  {
	  if (mode == MANUAL) {
		  Joystick_Read(&Joystick, xy_joystick);

		  Robot_Move(Robot, xy_joystick, button_state);

		  sprintf(data, "X: %hd, Y: %hd    ", xy_joystick[0], xy_joystick[1]);

		  LCD_XY(&LCD_1602, 1, 0);
		  LCD_String(&LCD_1602, data);

		  if (button_state == 1) {
			  LCD_XY(&LCD_1602, 0, 0);
			  LCD_String(&LCD_1602, "Button: 1");
		  }
		  else {
			  LCD_XY(&LCD_1602, 0, 0);
			  LCD_String(&LCD_1602, "Button: 0");
		  }

		  HAL_Delay(50);
	  }

	  else if(mode == SERIAL) {
		  LCD_XY(&LCD_1602, 0, 0);
		  LCD_String(&LCD_1602, "Serial Mode");

		  LCD_XY(&LCD_1602, 1, 0);
		  LCD_String(&LCD_1602, "Serial Mode");
	  }
  }
}


//Interrupt callbacks
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
	if (GPIO_Pin == JOYSTICK_BUTTON_Pin) {
		button_state = (button_state == 0) ? 1 : 0;
	}

	else if (GPIO_Pin == MODE_CHANGE_Pin) {
		mode = (mode == MANUAL) ? SERIAL : MANUAL;
	}
}

